---
{
	"head": [],
	"exclude": []
}
---

{{>
	const ICODE = /(`+)( ?)((?:(?!\1).)*?)\2\1{(\w+)}/g
	const cleanDescription = value?.replaceAll(ICODE, '$3')
}}

<!DOCTYPE html>
<html lang=en>
<meta charset=utf-8>
<title>{{ title }} | YOZO</title>

<meta name=viewport content="width=device-width,initial-scale=1">
<meta name=robots content="index,follow">
<meta name=description content="{{ cleanDescription |> escape }}">
<meta name="generator" content="{{ eleventy.generator }}">

<link rel=preload as=font href=/-/fonts/dm-sans.woff2 type=font/woff2 crossorigin>
<link rel=preload as=font href=/-/fonts/dm-mono.woff2 type=font/woff2 crossorigin>

<script src="{{ site.yozoPath }}"></script>
<script>
	self.yozo.register.auto(name => {
		const [namespace] = name.split('-', 1)
		return `/-/yz/${namespace}/${name}.yz`
	})
	// For a safari bug. Imports should work this way already.
	window.safeImport = async url => {
		const {cache} = safeImport
		if(!cache.has(url)) cache.set(url, import(url))
		return await cache.get(url)
	}
	window.safeImport.cache = new Map
</script>

<style>@layer base, custom-elements, layout;</style>
<link rel=stylesheet href=/-/css/fonts.css>
<link rel=stylesheet href=/-/css/base.css>
<link rel=stylesheet href=/-/css/custom-elements.css>

{{ for item of head }}
	{{ item }}
{{ /for }}

{{ if !exclude.includes('site-nav') }}
	<site-nav></site-nav>
{{ /if }}

{{ content }}

{{ if !exclude.includes('site-footer') }}
	<site-footer></site-footer>
{{ /if }}
